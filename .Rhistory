year(activity[1,2])
activity[1,2]
activity
activityNA <- filter(activity, is.na(steps))
activityNA
activity %>%
group_by(date) %>%
mutate(daily_median = median(steps))
activity %>%
group_by(date) %>%
mutate(daily_median = median(steps, na.rm = TRUE))
test <- activity %>%
group_by(date) %>%
mutate(daily_median = median(steps, na.rm = TRUE))
with(test, plot(daily_meadian ~ steps))
with(test, plot(daily_median ~ steps))
test <- activity %>%
group_by(date) %>%
summarise(daily_median = median(steps, na.rm = TRUE))
test
print(test, n = Inf)
head(activity)
test <- activity %>%
group_by(date) %>%
summarise(daily_median = mean(steps, na.rm = TRUE))
print(test, n = Inf)
levels(activity$interval)
unique(activity$interval)
test <- activity %>%
group_by(interval) %>%
summarise(interval_median = median(steps, na.rm = TRUE))
str(test)
test
print(test, n = Inf)
test <- activity %>%
group_by(interval) %>%
summarise(interval_mean = mean(steps, na.rm = TRUE))
print(test, n = Inf)
test <- activity %>%
group_by(interval) %>%
mutate(interval_mean = mean(steps, na.rm = TRUE))
test
?mutate_if
?ifelse
mutate(ifelse(is.na(steps),mean(steps, na.rm = TRUE), steps)
test <- activity %>%
group_by(interval) %>%
mutate(ifelse(is.na(steps),mean(steps, na.rm = TRUE), steps))
test
test <- activity %>%
group_by(date) %>%
mutate(ifelse(is.na(steps),mean(steps, na.rm = TRUE), steps))
test
test <- activity %>%
group_by(interval) %>%
mutate(ifelse(is.na(steps),mean(steps, na.rm = TRUE), steps))
hist(test$`ifelse(is.na(steps), mean(steps, na.rm = TRUE), steps)`)
hist(test$steps)
sum(is.na(test$steps))
test <- activity %>%
group_by(interval) %>%
mutate(ifelse(is.na(steps),mean(steps, na.rm = TRUE), steps))
sum(is.na(test$steps))
#activityNA <- filter(activity, is.na(steps))
test <- activity %>%
group_by(interval) %>%
mutate(ifelse(is.na(steps),mean(steps, na.rm = TRUE), steps))
sum(is.na(test$steps))
#activityNA <- filter(activity, is.na(steps))
test <- activity %>%
group_by(interval) %>%
mutate(imputed_steps = ifelse(is.na(steps),mean(steps, na.rm = TRUE), steps))
test <- activity %>%
group_by(interval) %>%
mutate(imputed_steps = ifelse(is.na(steps),mean(steps, na.rm = TRUE), steps))
sum(is.na(test$steps))
#activityNA <- filter(activity, is.na(steps))
sum(is.na(test$imputed_steps))
activity %>%
group_by(interval) %>%
mutate(imputed_steps = ifelse(is.na(steps),mean(steps, na.rm = TRUE), steps))
activity %>%
group_by(interval) %>%
summarise(mean_interval = mean(steps, na.rm = TRUE))
activity %>%
group_by(interval) %>%
summarise(mean_interval = mean(steps, na.rm = TRUE)) %>%
print(n = Inf)
activityNEW <- activity %>%
group_by(interval) %>%
mutate(imputed_steps = ifelse(is.na(steps),mean(steps, na.rm = TRUE), steps))
hist(totalSteps$total_steps)
activityNEW %>%
group_by(date) %>%
summarise(total_steps = sum(steps, na.rm = TRUE)) %>%
hist()
activityNEW %>%
group_by(date) %>%
summarise(total_steps = sum(steps, na.rm = TRUE)) %>%
hist(totalSteps)
activityNEW %>%
group_by(date) %>%
summarise(total_steps = sum(steps, na.rm = TRUE)) %>%
hist(total_steps)
activityNEW %>%
group_by(date) %>%
summarise(total_steps = sum(steps, na.rm = TRUE)) %>%
hist()
hist(totalStepsNEW$total_steps)
totalStepsNEW <- activityNEW %>%
group_by(date) %>%
summarise(total_steps = sum(steps, na.rm = TRUE))
hist(totalStepsNEW$total_steps)
(statistics <- totalStepsNEW %>%
summarise(mean_steps = mean(total_steps), median_steps = median(total_steps)))
(statistics <- totalSteps %>%
summarise(mean_steps = mean(total_steps), median_steps = median(total_steps)))
cbind(totalSteps, totalStepsNEW)
head(activity)
weekdays(activity[1,2])
getwd()
list.files()
temp <- tempfile()
download.file("activity.zip",temp)
#carsData <- read.table(unz(temp, "a1.dat"))
unlink(temp)
?unz
temp <- tempfile("activity", fileext=c("zip"))
temp
data <- read.table(unz(temp, "activity.csv"))
data <- read.table("activity.csv")
#temp <- tempfile("activity", fileext=c("zip"))
data <- read.table("activity.zip")
#temp <- tempfile()
#download.file("activity.zip",temp)
#carsData <- read.table(unz(temp, "a1.dat"))
#unlink(temp)
data
library(tidyverse)
activity <- read_csv(file = "activity.zip")
library(tidyverse)
activity <- read_csv(file = "activity.zip")
head(activity)
?weekdays
Sys.Date()
class(Sys.Date())
class(activity[1,2])
as.Date(activity[1,2])
as_date(activity[1,2])
library(lubridate)
as_date(activity[1,2])
?read.csv
getwd()
?gzfile
zz <- unzip(zipfile = "activity.zip")
zz <- unzip(zipfile = "activity.zip", files = "activity.csv")
str(zz)
zz <- unzip(zipfile = "activity.zip")
zz
ls()
activity <- read.csv(file = "zz", header = TRUE)
list.dirs()
list.files()
unzip(zipfile = "activity.zip")
unzip(zipfile = "activity.zip", list = TRUE)
activity <- read.csv(file = "activity.csv", header = TRUE)
rm(zz)
str(activity)
unique(activity$date)
with(activity, tapply(steps, date, sum, na.rm = TRUE))
as.data.frame(with(activity, tapply(steps, date, sum, na.rm = TRUE)))
sums <- with(activity, tapply(steps, date, sum, na.rm = TRUE))
names(sums)
sums
sums <- data.frame(date = names(sums), total_steps = sums)
sums
sums <- with(activity, tapply(steps, date, sum, na.rm = TRUE))
sums <- data.frame(date = names(sums), total_steps = unname(sums))
sums
hist(sums$total_steps)
hist(sums$total_steps)
hist(sums$total_steps, breaks = 20)
hist(sums$total_steps, breaks = 20)
hist(sums$total_steps, breaks = 15)
hist(sums$total_steps, breaks = 16)
unzip(zipfile = "activity.zip")
activity <- read.csv(file = "activity.csv")
str(activity)
tapply(activity_clean$steps, activity_clean$date, sum, na.rm = T)
tapply(activity$steps, activity$date, sum, na.rm = T)
steps_daily <- with(activity, tapply(steps, date, sum, na.rm = TRUE))
steps_daily
steps_daily <- data.frame(date = names(steps_daily), total_steps = unname(steps_daily))
steps_daily
steps_mean <- mean(steps_daily$total_steps, na.rm = TRUE)
steps_mean
steps_median <- median(steps_daily$total_steps, na,na.rm = TRUE)
steps_stats <- data.frame(mean = mean(steps_daily$total_steps, na.rm = TRUE),
median = median(steps_daily$total_steps, na,na.rm = TRUE))
steps_stats
knitr::kable(steps_stats)
?knitr::kable
?knitr::kable_paper
mytable <- xtable::xtable(steps_stats)
str(mytable)
print(mytable, type = "html")
?print
print(mytable, type = "md")
install.packages("kableExtra")
library(kableExtra)
?kable_classic
?kble
?kable
stats_table <- kable(steps_stats, caption = "Summary statistics of total number of steps",
table.attr = "style='width:30%;'")
head(activity)
str(activity)
activity$interval <- as.factor(activity$interval)
str(activity)
steps_interval <- with(activity, tapply(steps, interval, mean, na.rm = TRUE))
steps_interval
steps_interval <- data.frame(interval = names(steps_interval), mean_steps = unname(steps_interval))
steps_interval
str(steps_interval)
activity <- read.csv(file = "activity.csv", header = TRUE)
steps_interval <- with(activity, tapply(steps, interval, mean, na.rm = TRUE))
steps_interval <- data.frame(interval = names(steps_interval),
mean_steps = unname(steps_interval))
with(steps_interval, plot(mean_steps ~ interval))
str(steps_interval)
activity <- read.csv(file = "activity.csv", header = TRUE)
str(activity)
steps_interval <- with(activity, tapply(steps, interval, mean, na.rm = TRUE))
str(steps_interval)
steps_interval <- data.frame(interval = names(steps_interval),
mean_steps = unname(steps_interval))
str(steps_interval)
steps_interval <- with(activity, tapply(steps, interval, mean, na.rm = TRUE))
steps_interval <- data.frame(interval = as.numeric(names(steps_interval)),
mean_steps = unname(steps_interval))
str(steps_interval)
which.max(steps_interval$mean_steps)
which.max(steps_interval$mean_steps)
?par
?pch
?max
steps_interval[max_steps,"interval"]
max_steps <- which.max(steps_interval$mean_steps)
steps_interval[max_steps,"interval"]
steps_interval[max_steps,]
?pch
unique(steps_interval$interval, 10)
round(steps_interval[max_steps,"mean_steps"]),2)
head(activity)
steps_mean
steps_interval
steps_NA <- which(is.na(activity$steps))
steps_NA
nrow(activity)
str(activity_imputed[steps_NA,1])
activity_imputed <- activity
str(activity_imputed[steps_NA,1])
str(activity_imputed[steps_NA,"interval"])
steps_interval[4]
steps_interval["4"]
steps_interval["5"]
steps_interval["800"]
steps_interval["5",1]
steps_interval["4",1]
steps_interval["3",1]
head(steps_interval)
steps_interval[3,1]
steps_interval[25,1]
steps_interval[interval == 25,1]
steps_interval[steps_interval$interval == 25,1]
steps_interval[steps_interval$interval == 25,2]
steps_interval[25,2]
str(activity)
str(activity_imputed)
activity_imputed <- activity
activity_imputed[steps_NA,1] <- steps_interval[steps_interval$interval == activity_imputed[steps_NA,"interval"]]
sum(is.na(activity_imputed))
activity_imputed <- activity
activity_imputed[steps_NA,1] <- steps_interval[steps_interval$interval == activity_imputed[steps_NA,"interval"], "mean_steps"]
sum(is.na(activity_imputed))
str(activity_imputed)
sum(is.na(activity_imputed$steps))
activity_imputed <- activity
str(activity_imputed[steps_NA,"steps"])
str(steps_interval$interval == activity_imputed[steps_NA,"interval"])
str(activity_imputed[steps_NA,"interval"])
activity_imputed[steps_NA,"interval"][1:100]
activity_imputed[steps_NA,"interval"][300:400]
activity_imputed[steps_NA,"interval"][250:400]
x <- activity_imputed[steps_NA,"interval"][250:400]
str(steps_interval[x])
str(steps_interval[x,2])
x <- activity_imputed[steps_NA,"interval"]
str(steps_interval[x,2])
activity_imputed <- activity
x <- activity_imputed[steps_NA,"interval"]
str(x)
str(steps_interval[x,2])
steps_NA <- which(is.na(activity$steps))
str(steps_NA)
x <- activity_imputed[steps_NA,"interval"]
str(x)
steps_interval_new <- with(activity, tapply(steps, interval, mean, na.rm = TRUE)
steps_interval_new <- with(activity, tapply(steps, interval, mean, na.rm = TRUE))
activity_imputed[steps_NA,"steps"] <- steps_interval[activity_imputed[steps_NA,"interval"], "mean_steps"]
activity_imputed[steps_NA,"steps"] <- steps_interval_new[activity_imputed[steps_NA,"interval"], "mean_steps"]
activity_imputed[steps_NA,"steps"] <- steps_interval_new[activity_imputed[steps_NA,"interval"]]
str(steps_interval_new)
str(activity_imputed[steps_NA,"interval"])
activity_imputed[steps_NA,"steps"] <- steps_interval_new[as.character(activity_imputed[steps_NA,"interval")]]
activity_imputed[steps_NA,"steps"] <- steps_interval_new[as.character(activity_imputed[steps_NA,"interval"])]
sum(is.na(activity_imputed))
head(activity_imputed)
head(activity)
sapply(list(steps_daily, steps), function)
steps_daily_imputed <- with(activity_imputed, tapply(steps, date, sum, na.rm = TRUE))
steps_daily_imputed <- data.frame(date = names(steps_daily_imputed), total_steps = unname(steps_daily_imputed))
sapply(list(steps_daily, steps_daily_imputed), range)
sapply(list(steps_daily$total_steps, steps_daily_imputed$total_steps), range)
x <- hist(steps_daily$total_steps, breaks = 15, col = "grey", xlab = "Number of steps",
main = "Total number of steps taken each day")
str(x)
x$counts
x <- hist(steps_daily$total_steps, breaks = 15, col = "grey", xlab = "Number of steps",
main = "Total number of steps taken each day", add = F)
x <- hist(steps_daily$total_steps, breaks = 15, col = "grey", xlab = "Number of steps",
main = "Total number of steps taken each day")
x <- hist(steps_daily$total_steps, breaks = 15, col = "grey", xlab = "Number of steps",
main = "Total number of steps taken each day", add = F)
x <- hist(steps_daily$total_steps, breaks = 15, col = "grey", xlab = "Number of steps",
main = "Total number of steps taken each day", plot = F)
max_freq <- hist(steps_daily$total_steps, breaks = 15)$counts
max_freq
max_freq_imputed <- max(hist(steps_daily_imputed$total_steps, breaks = 15)$counts)
max(hist(steps_daily_imputed$total_steps, breaks = 15)$counts)
?hist
mean(steps_daily$total_steps)
median(steps_daily$total_steps)
mean(steps_daily_imputed$total_steps)
median(steps_daily_imputed$total_steps)
tail(mtcars, 5)
as.table(steps_daily, steps_daily_imputed)
apply(data.frame(steps_daily, steps_daily_imputed), 2, FUN = mean())
apply(data.frame(steps_daily, steps_daily_imputed), 2, FUN = mean
apply(data.frame(steps_daily, steps_daily_imputed), 2, FUN = mean)
apply(data.frame(steps_daily, steps_daily_imputed), 2, FUN = mean, na.rm = T)
head(steps_daily)
apply(data.frame(steps_daily$total_steps, steps_daily_imputed$total_steps), 2, FUN = mean, na.rm = T)
summary(steps_daily$total_steps)
str(summary(steps_daily$total_steps))
apply(data.frame(steps_daily$total_steps, steps_daily_imputed$total_steps), 2, FUN = sum(), na.rm = T)
apply(data.frame(steps_daily$total_steps, steps_daily_imputed$total_steps), 2, FUN = sum, na.rm = T)
apply(data.frame(steps_daily$total_steps, steps_daily_imputed$total_steps), 2, FUN = sum)
head(data.frame(steps_daily$total_steps, steps_daily_imputed$total_steps))
head(steps_daily)
head(steps_daily_imputed)
steps_daily <- with(activity, tapply(steps, date, sum, na.rm = TRUE))
with(activity, tapply(steps, date, sum, na.rm = TRUE))
with(activity, tapply(steps, interval, mean, na.rm = TRUE))
with(activity, tapply(steps, interval, mean, na.rm = TRUE))
apply(data.frame(x = 1:10, y = 11:20), MARGIN = 2, FUN = summary)
apply(data.frame(original = steps_daily$total_steps, imputed = steps_daily_imputed$total_steps), 2, FUN = summary)
str(data.frame(original = steps_daily$total_steps, imputed = steps_daily_imputed$total_steps))
str(steps_daily)
apply(data.frame(original = steps_daily, imputed = steps_daily_imputed), 2, FUN = summary)
apply(data.frame(original = unname(steps_daily), imputed = unname(steps_daily_imputed)), 2, FUN = summary)
head(steps_daily)
head(as.vector(steps_daily))
head(unname(steps_daily))
head(unname(steps_daily_imputed))
steps_daily <- data.frame(date = names(steps_daily), total_steps = unname(steps_daily))
steps_daily_imputed <- with(activity_imputed, tapply(steps, date, sum, na.rm = TRUE))
steps_daily_imputed <- data.frame(date = names(steps_daily_imputed), total_steps = unname(steps_daily_imputed))
apply(data.frame(original = unname(steps_daily), imputed = unname(steps_daily_imputed)), 2, FUN = summary)
head(steps_daily)
apply(data.frame(original = steps_daily$total_steps, imputed = steps_daily_imputed$total_steps), 2, FUN = summary)
stats["Mean"]
stats["Mean"]
stats <- apply(data.frame(original = steps_daily$total_steps, imputed = steps_daily_imputed$total_steps), 2, FUN = summary)
stats["Mean"]
stats["Mean",]
stats
str(stats)
stats[c("Mean", "Median"),]
activity <- read.csv(file = "activity.csv", header = TRUE)
activity$date <- as.Date(activity$date)
str(activity)
weekdays(x = activity$date[1:5])
table(activity$date)
weekdays(x = activity$date[287:291])
steps_NA <- which(is.na(activity$steps))
steps_interval_new <- with(activity, tapply(steps, interval, mean, na.rm = TRUE))
activity_imputed <- activity
activity_imputed[steps_NA,"steps"] <- steps_interval_new[as.character(activity_imputed[steps_NA,"interval"])]
str(activity_imputed)
Sys.Date()
weekdays(Sys.Date()+0:6)
weekday_f <- function(m){
if(weekdays(m) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")){
print("weekday") else {
print("weekend")
}
}
}
activity_imputed$weekday <- sapply(activity_imputed[,"date"], weekday_f)
weekday_f <- function(m){
if(weekdays(m) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")){
print("weekday")
} else {
print("weekend")
}
}
activity_imputed$weekday <- sapply(activity_imputed[,"date"], weekday_f)
activity_imputed$weekday <- sapply(activity_imputed[,"date"], weekday_f)
str(activity_imputed)
weekdays(x = activity_imputed$date[287:291])
weekdays(x = activity_imputed$weekday[287:291])
activity_imputed$weekday[287:291]
weekday_f <- function(m){
if(weekdays(m) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")){
print("weekday")
} else {
print("weekend")
}
}
(activity_imputed$weekday <- sapply(activity_imputed[,"date"], weekday_f))
weekday_f <- function(m){
if(weekdays(m) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")){
print("weekday")
} else {
print("weekend")
}
}
activity_imputed$weekday <- sapply(activity_imputed[,"date"], weekday_f);
weekday_f <- function(m){
if(weekdays(m) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")){
print("weekday")
} else {
print("weekend")
}
}
invisible(activity_imputed$weekday <- sapply(activity_imputed[,"date"], weekday_f))
invisible(1:10)
weekday_f <- function(m){
if(weekdays(m) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")){
"weekday"
} else {
"weekend"
}
}
invisible(activity_imputed$weekday <- sapply(activity_imputed[,"date"], weekday_f))
weekday_f <- function(m){
ifelse(weekdays(m) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), "weekday", "weekend")
}
activity_imputed$weekday <- sapply(activity_imputed[,"date"], weekday_f)
str(activity_imputed)
activity_imputed$weekday <- as.factor(activity_imputed$weekday)
str(activity_imputed)
with(activity_imputed, tapply(steps, list(interval, weekday), mean, na.rm = T))
str(with(activity_imputed, tapply(steps, list(interval, weekday), mean, na.rm = T)))
as.data.frame(with(activity_imputed, tapply(steps, list(interval, weekday), mean, na.rm = T)))
as.data.frame(with(activity_imputed, tapply(steps, list(interval, weekday), mean, na.rm = T)), stringsAsFactors = T)
str(as.data.frame(with(activity_imputed, tapply(steps, list(interval, weekday), mean, na.rm = T)), stringsAsFactors = T))
panel_plot <- as.data.frame(with(activity_imputed, tapply(steps, list(interval, weekday), mean, na.rm = T)))
head(panel_plot)
panel_plot$interval <- row.names(panel_plot)
head(panel_plot)
row.names(panel_plot) <- NULL
head(panel_plot)
panel_plot <- as.data.frame(with(activity_imputed, tapply(steps, list(interval, weekday), mean, na.rm = T)))
panel_plot$interval <- row.names(panel_plot)
panel_plot <- as.data.frame(with(activity_imputed, tapply(steps, list(interval, weekday), mean, na.rm = T)))
panel_plot$interval <- row.names(panel_plot)
head(panel_plot)
library(lattice)
head(activity_imputed)
library(tidyverse)
?melt
??melt
?aggregate
panel_plot_long <- gather(data = panel_plot, key = weekday, value = mean_steps, ... = weekday:weekend)
?gather
?pivot_longer
vignette("pivot")
panel_plot <- as_tibble(panel_plot)
panel_plot
panel_plot_long <- pivot_longer(data = panel_plot, cols = -interval, names_to = "weekday", values_to = "mean_steps")
panel_plot_long
xyplot(mean_steps ~ interval | weekday, data = panel_plot_long)
?xyplot
tail(panel_plot_long)
panel_plot <- as.data.frame(with(activity_imputed, tapply(steps, list(interval, weekday), mean, na.rm = T)))
head(panel_plot)
panel_plot$interval <- row.names(panel_plot)
head(panel_plot)
str(panel_plot)
panel_plot <- as.data.frame(with(activity_imputed, tapply(steps, list(interval, weekday), mean, na.rm = T)))
panel_plot$interval <- as.numeric(row.names(panel_plot))
str(panel_plot)
panel_plot <- as_tibble(panel_plot)
panel_plot
panel_plot_long <- pivot_longer(data = panel_plot, cols = -interval, names_to = "weekday", values_to = "mean_steps")
panel_plot_long
xyplot(mean_steps ~ interval | weekday, data = panel_plot_long)
xyplot(mean_steps ~ interval | weekday, data = panel_plot_long, layout = c(1,2), type = "l")
xyplot(mean_steps ~ interval | weekday, data = panel_plot_long, layout = c(1,2), type = "l", xlab = "Interval", ylab = "Number of steps")
unzip(zipfile = "activity.zip")
